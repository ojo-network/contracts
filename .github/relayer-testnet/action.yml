name: Update Cosmos Testnet
branding:
  icon: box
  color: purple
description: Create new testnet; teardown existing first if one exists
inputs:
  COSMOS_BINARY_NAME:
    description: name of app binary
    required: true
  COSMOS_BINARY_VERSION:
    description: version of app binary
    required: true
  RELAYER_BINARY_NAME:
    description: name of relayer binary
    required: true
  RELAYER_BINARY_VERSION:
    description: version of app binary
    required: true
  PULUMI_PROJECT_DIR:
    description: location of pulumi project for automation
    required: true
  PULUMI_STACK_NAME:
    description: name of pulumi stack optionally including organization prefix
    required: true
  PULUMI_ACCESS_TOKEN:
    description: token with access to control umee organization
    required: true
  GITHUB_TOKEN:
    description: token with access to current github repo
    required: true
  UMEE_INFRA_SSH_KEY:
    description: ssh key with access to umee-network/umee-infra github repo
    required: true
  GCP_WORKLOAD_IDENTITY_PROVIDER:
    description: https://cloud.google.com/blog/products/identity-security/enabling-keyless-authentication-from-github-actions
    required: true
  GCP_SERVICE_ACCOUNT:
    description: service account with access to provision pulumi resources in the project
    required: true
runs:
  using: composite
  steps:
    - uses: dsaltares/fetch-gh-release-asset@master
      with:
        #relayer config remaining
        version: 'tags/${{ inputs.COSMOS_BINARY_VERSION }}'
        file: '${{ inputs.COSMOS_BINARY_NAME }}-${{ inputs.COSMOS_BINARY_VERSION }}-linux-amd64'
        target: '/usr/local/bin/${{ inputs.COSMOS_BINARY_NAME }}-${{ inputs.COSMOS_BINARY_VERSION }}'
        token: ${{ inputs.GITHUB_TOKEN }}
    - name: Install Binaries
      shell: bash
      working-directory: /usr/local/bin
      run: |
        set -xeu
        
        relayer_binary_name=${{ inputs.RELAYER_BINARY_NAME }}-${{ inputs.RELAYER_BINARY_VERSION }}
        sudo chmod a+x ${relayer_binary_name}
        
        ${relayer_binary_name} version
        
        sudo apt install -y wamerican-large
    - name: Setup Private SSH Key for Umee-Infra libs
      shell: bash
      run: |
        git config --global url.git@github.com:.insteadOf https://github.com/
        mkdir -p ~/.ssh
        echo '${{ inputs.UMEE_INFRA_SSH_KEY }}' > ~/.ssh/id_rsa
        chmod -R go-rwx ~/.ssh
        ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
        chmod -R go-rwx ~/.ssh
    - uses: 'google-github-actions/auth@v0.4.0'
      with:
        workload_identity_provider: "${{ inputs.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
        service_account: "${{ inputs.GCP_SERVICE_ACCOUNT }}"
    - name: Inject Pulumi Config
      shell: bash
      working-directory: infra/pulumi/testnet
      run: |
        binary_name=${{ inputs.COSMOS_BINARY_NAME }}-${{ inputs.COSMOS_BINARY_VERSION }}
        relayer_binary_name=${{ inputs.RELAYER_BINARY_NAME }}-${{ inputs.RELAYER_BINARY_VERSION }}
        pulumi config set --stack ${{ inputs.PULUMI_STACK_NAME }} --color never --path config.localRelayerBinaryPath ${relayer_binary_name} 
        ls -lha /usr/local/bin
      env:
        PULUMI_ACCESS_TOKEN: ${{ inputs.PULUMI_ACCESS_TOKEN }}
    - name: Pulumi Recreate
      shell: bash
      working-directory: infra/pulumi/testnet
      run: |
#       just make updates
        pulumi up --yes --skip-preview --color never --exec-kind auto.local --stack ojo-network/devnet --non-interactive
      env:
        PULUMI_ACCESS_TOKEN: ${{ inputs.PULUMI_ACCESS_TOKEN }}
